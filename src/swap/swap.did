type CreatePoolParams = record {
  weight : float64;
  balance : nat64;
  value : nat64;
  image : text;
  ledger_canister_id : principal;
  token_name : text;
};
type Pool_Data = record {
  pool_data : vec CreatePoolParams;
  swap_fee : float64;
};
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : nat; Err : text };
type SwapParams = record {
  token_amount : nat64;
  token2_name : text;
  ledger_canister_id : principal;
  token1_name : text;
};
service : {
  add_liquidity_to_pool : (principal, Pool_Data) -> (Result);
  icrc1_transfer : (principal, principal, nat64) -> (Result_1);
  pool_balance : (principal, Pool_Data) -> ();
  store_pool_data : (principal, Pool_Data) -> (Result);
  swap : (principal, SwapParams, float64) -> (Result);
}
